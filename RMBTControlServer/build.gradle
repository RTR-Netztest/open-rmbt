buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'war'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


project.webAppDirName = 'WebContent'

repositories {
    mavenCentral()
    maven{url 'http://maven.restlet.com'}
    maven{url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

sourceSets {
    main {
        java { srcDirs = ['src'] }
        resources { srcDirs = [
                'src',
                '../private/RMBTControlServer/src'
        ]}
    }
}

subprojects{
    evaluationDependsOn(':RMBTSharedCode')
    evaluationDependsOn(':RMBTUtil')
}

def webXmlFile = file(project.webAppDirName + "/WEB-INF/web.xml")
def generatedContextXmlFile = file("${buildDir}/context.xml")

dependencies {
    providedCompile "org.apache.tomcat:tomcat-catalina:$catalinaVersion"
    providedCompile "javax.servlet:javax.servlet-api:$servletVersion"
    compile('commons-io:commons-io:2.4',
            "org.json:json:$jsonVersion",
            "org.restlet.jse:org.restlet.ext.json:${restletVersion}",
            "org.restlet.jee:org.restlet.ext.servlet:$restletVersion",
            'is.tagomor.woothee:woothee-java:1.7.0',
            'com.vdurmont:semver4j:2.0.2',
            'commons-dbutils:commons-dbutils:1.6',
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            group: 'net.bull.javamelody', name: 'javamelody-core', version: '1.85.0'
    )
    testCompile 'net.sf.uadetector:uadetector-resources:2014.10'
    compile project(':RMBTSharedCode')
    compile project(':RMBTUtil')
}


war {
    webXml = webXmlFile
    exclude 'WEB-INF/web.xml'
    exclude 'WEB-INF/lib/**'
    exclude 'WEB-INF/classes/**'
    exclude 'META-INF/context.xml'
    from(buildDir){ 
            into('META-INF') 
            include 'context.xml' 
    }
}


def revisionPropertiesFile = file("${buildDir}/resources/main/revision.properties")
processResources {
    doLast {
        String revisionProperties = "git.describe=" + getVersionNameFromGit() + "\n"
        revisionProperties = revisionProperties + "git.branch=" + getBranchFromGit() + "\n"
        revisionProperties = revisionProperties + "git.dirty=" + getDirtyFromGit() + "\n"
        revisionProperties = revisionProperties + "git.id=" + getHashFromGit() + "\n"
        revisionProperties = revisionProperties + "git.revision=" + getVersionCodeFromGit() + "\n"
        revisionPropertiesFile.write(revisionProperties, 'UTF-8')
    }
}