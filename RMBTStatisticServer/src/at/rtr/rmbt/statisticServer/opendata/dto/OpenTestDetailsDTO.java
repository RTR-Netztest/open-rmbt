package at.rtr.rmbt.statisticServer.opendata.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OpenTestDetailsDTO extends OpenTestDTO {

    private Double distance;
    private String cat_technology;
    private String networkType;
    private String locSrc;
    private String publicIpAsName;
    private Long zipCode;
    private Long kgNr;
    private Long gkz;
    private Long gkzSa;
    private Long landCover;
    private String locality;
    private String community;
    private String district;
    private String province;
    private Long lteRsrq;
    private String serverName;
    private Boolean implausible;
    private Boolean pinned;
    private Long testDuration;
    private Long numThreadsRequested;
    private Long numThreads;
    private Long numThreadsUl;
    private String model;
    private String modelNative;
    private String product;
    private String clientVersion;
    private String networkMccMnc;
    private String networkCountry;
    private Long roamingType;
    private String networkName;
    private String simMccMnc;
    private String simCountry;
    private String connection;
    private Long asn;
    private String ipAnonym;
    private Long ndtDownloadKbit;
    private Long ndtUploadKbit;
    private String countryGeoip;
    private String countryAsn;
    private String countryLocation;
    private Long bytesDownload;
    private Long bytesUpload;
    private Long testIfBytesDownload;
    private Long testIfBytesUpload;
    private Long testdlIfBytesDownload;
    private Long testdlIfBytesUpload;
    private Long testulIfBytesDownload;
    private Long testulIfBytesUpload;
    private Double durationDownloadMs;
    private Double durationUploadMs;
    private Double timeDlMs;
    private Double timeUlMs;
    private Long channelNumber;
    private Long radioBand;
    private Long cellAreaCode;
    private Long cellLocationId;
    private Integer signalClassification;
    private String error;
    private Long wifiLinkSpeed;
    private Integer settlementType;
    private Long linkId;
    private String linkName;
    private Integer linkDistance;
    private Long edgeId;
    private String linkName1;
    private String linkName2;
    private Integer linkFrc;
    private Integer dtm_level;


    private OpenTestGraphDTO speedCurve;
    private Map<String, Map<String, List<SpeedGraphItemDTO.SpeedItemThreadwise>>> speedCurveThreadwise = new HashMap<>();

    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getError() {
        return error;
    }

    public void setError(String error) {
        this.error = error;
    }

    @ApiModelProperty(value = "The distance that the user moved in meters.",
            example = "134")
    public Double getDistance() {
        return distance;
    }

    public void setDistance(Double distance) {
        this.distance = distance;
    }

    @JsonProperty("cat_technology")
    @ApiModelProperty(value = "Technology category of the network, e.g. “3G”, “4G”, “5G”, “WLAN”.",
            example = "4G")
    public String getCat_technology() {
        return cat_technology;
    }

    public void setCat_technology(String cat_technology) {
        this.cat_technology = cat_technology;
    }

    @JsonProperty("loc_src")
    @ApiModelProperty(value = "Source for the geo location-data. Values: “gps”, “network”.",
            example = "gps",
            allowableValues = "gps,network")
    public String getLocSrc() {
        return locSrc;
    }

    public void setLocSrc(String locSrc) {
        this.locSrc = locSrc;
    }

    @JsonProperty("public_ip_as_name")
    @ApiModelProperty(value = "Name of the AS of the clients public IP.",
            example = "AS32768 Provider")
    public String getPublicIpAsName() {
        return publicIpAsName;
    }

    public void setPublicIpAsName(String publicIpAsName) {
        this.publicIpAsName = publicIpAsName;
    }

    @JsonProperty("zip_code")
    @ApiModelProperty(value = "Obsolete, always 'null'")
    public Long getZipCode() {
        return zipCode;
    }

    public void setZipCode(Long zipCode) {
        this.zipCode = zipCode;
    }

    @JsonProperty("kg_nr")
    @ApiModelProperty(value = "Number of the cadastral community, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>",
            example = "1009")
    public Long getKgNr() {
        return kgNr;
    }

    public void setKgNr(Long kgNr) {
        this.kgNr = kgNr;
    }

    @JsonProperty("gkz")
    @ApiModelProperty(value = "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            example = "90001")
    public Long getGkz() {
        return gkz;
    }

    public void setGkz(Long gkz) {
        this.gkz = gkz;
    }

    @JsonProperty("gkz_sa")
    @ApiModelProperty(value = "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            example = "90601")
    public Long getGkzSa() {
        return gkzSa;
    }

    public void setGkzSa(Long gkzSa) {
        this.gkzSa = gkzSa;
    }

    @JsonProperty("land_cover")
    @ApiModelProperty(value = "Classification of the land cover within austria, see <http://www.umweltbundesamt.at/fileadmin/site/umweltthemen/raumplanung/1_flaechennutzung/corine/CORINE_Nomenklatur.pdf> and <https://www.eea.europa.eu/data-and-maps/data/clc-2006-vector-4>",
            example = "112")
    public Long getLandCover() {
        return landCover;
    }

    public void setLandCover(Long landCover) {
        this.landCover = landCover;
    }

    @JsonProperty("locality")
    @ApiModelProperty(value = "Name of the cadastral community, see: <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>",
            example = "Mariahilf")
    public String getLocality() {
        return locality;
    }

    public void setLocality(String locality) {
        this.locality = locality;
    }

    @JsonProperty("community")
    @ApiModelProperty(value = "Name of Austrian community (Gemeinde).",
            example = "Wien")
    public String getCommunity() {
        return community;
    }

    public void setCommunity(String community) {
        this.community = community;
    }

    @JsonProperty("district")
    @ApiModelProperty(value = "Name of Austrian district (Bezirk).",
            example = "Mistelbach")
    public String getDistrict() {
        return district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    @JsonProperty("province")
    @ApiModelProperty(value = "Name of Austrian province (Bundesland)",
            example = "Wien")
    public String getProvince() {
        return province;
    }

    public void setProvince(String province) {
        this.province = province;
    }

    @JsonProperty("lte_rsrq")
    @ApiModelProperty(value = "LTE signal quality in decibels",
            example = "-6")
    public Long getLteRsrq() {
        return lteRsrq;
    }

    public void setLteRsrq(Long lteRsrq) {
        this.lteRsrq = lteRsrq;
    }

    @JsonProperty("server_name")
    @ApiModelProperty(value = "Name of the test-server.",
            example = "RTR-DEVELOP-SERVER")
    public String getServerName() {
        return serverName;
    }

    public void setServerName(String serverName) {
        this.serverName = serverName;
    }

    @JsonProperty("implausible")
    @ApiModelProperty(value = "Identification of implausible test results.",
            example = "true")
    public Boolean getImplausible() {
        return implausible;
    }

    public void setImplausible(Boolean implausible) {
        this.implausible = implausible;
    }

    @JsonProperty("pinned")
    @ApiModelProperty(value = "_True_, if if the test is relevant for generating the statistics (e.g. not part of a series)")
    public Boolean getPinned() {
        return pinned;
    }

    public void setPinned(Boolean pinned) {
        this.pinned = pinned;
    }

    @JsonProperty("test_duration")
    @ApiModelProperty(value = "Duration of the test per direction (up- or download) in seconds.",
            example = "7")
    public Long getTestDuration() {
        return testDuration;
    }

    public void setTestDuration(Long testDuration) {
        this.testDuration = testDuration;
    }

    @JsonProperty("num_threads_requested")
    @ApiModelProperty(value = "Number of threads requested by the server.",
            example = "3")
    public Long getNumThreadsRequested() {
        return numThreadsRequested;
    }

    public void setNumThreadsRequested(Long numThreadsRequested) {
        this.numThreadsRequested = numThreadsRequested;
    }

    @JsonProperty("num_threads")
    @ApiModelProperty(value = "Number of threads used for the downlink test.",
            example = "3")
    public Long getNumThreads() {
        return numThreads;
    }

    public void setNumThreads(Long numThreads) {
        this.numThreads = numThreads;
    }

    @JsonProperty("num_threads_ul")
    @ApiModelProperty(value = "Number of threads used for the uplink test.",
            example = "3")
    public Long getNumThreadsUl() {
        return numThreadsUl;
    }

    public void setNumThreadsUl(Long numThreadsUl) {
        this.numThreadsUl = numThreadsUl;
    }

    @JsonProperty("model")
    @ApiModelProperty(value = "Name of the device used.",
            example = "Sony Xperia Tablet Z LTE")
    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    @JsonProperty("model_native")
    @ApiModelProperty(value = "Name of the device used, raw device name.",
            example = "SGP321")
    public String getModelNative() {
        return modelNative;
    }

    public void setModelNative(String modelNative) {
        this.modelNative = modelNative;
    }

    @JsonProperty("product")
    @ApiModelProperty(value = "Name of the client device.",
            example = "SGP321")
    public String getProduct() {
        return product;
    }

    public void setProduct(String product) {
        this.product = product;
    }

    @JsonProperty("client_version")
    @ApiModelProperty(value = "Software version number of the client.",
            example = "1.1")
    public String getClientVersion() {
        return clientVersion;
    }

    public void setClientVersion(String clientVersion) {
        this.clientVersion = clientVersion;
    }

    @JsonProperty("network_mcc_mnc")
    @ApiModelProperty(value = "Network identification whereas the first three digits represent the country, the digits following the dash represent the mobile network provider within that country.",
            example = "232-05")
    public String getNetworkMccMnc() {
        return networkMccMnc;
    }

    public void setNetworkMccMnc(String networkMccMnc) {
        this.networkMccMnc = networkMccMnc;
    }

    @JsonProperty("network_country")
    @ApiModelProperty(value = "Country of the network in ISO 3166.",
            example = "DE")
    public String getNetworkCountry() {
        return networkCountry;
    }

    public void setNetworkCountry(String networkCountry) {
        this.networkCountry = networkCountry;
    }

    @JsonProperty("roaming_type")
    @ApiModelProperty(value = "Integer representing the roaming status of the client:\n" +
            "* 0: no roaming,\n" +
            "* 1: national roaming,\n" +
            "* 2: international roaming.",
            example = "1",
            allowableValues = "0,1,2")
    public Long getRoamingType() {
        return roamingType;
    }

    public void setRoamingType(Long roamingType) {
        this.roamingType = roamingType;
    }

    @JsonProperty("network_name")
    @ApiModelProperty(value = "Display name of the mobile network.",
            example = "3 AT")
    public String getNetworkName() {
        return networkName;
    }

    public void setNetworkName(String networkName) {
        this.networkName = networkName;
    }

    @JsonProperty("sim_mcc_mnc")
    @ApiModelProperty(value = "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            example = "232-01")
    public String getSimMccMnc() {
        return simMccMnc;
    }

    public void setSimMccMnc(String simMccMnc) {
        this.simMccMnc = simMccMnc;
    }

    @JsonProperty("sim_country")
    @ApiModelProperty(value = "Home country of the SIM card in ISO 3166.",
            example = "AT")
    public String getSimCountry() {
        return simCountry;
    }

    public void setSimCountry(String simCountry) {
        this.simCountry = simCountry;
    }

    @JsonProperty("connection")
    @ApiModelProperty(value = "Type of connection in terms of NAT and IP-Version (e.g. behind NAT with local to public IP and IPv4).",
            example = "nat_local_to_public_ipv4")
    public String getConnection() {
        return connection;
    }

    public void setConnection(String connection) {
        this.connection = connection;
    }

    @JsonProperty("asn")
    @ApiModelProperty(value = "Autonomous system number.",
            example = "6830")
    public Long getAsn() {
        return asn;
    }

    public void setAsn(Long asn) {
        this.asn = asn;
    }

    @JsonProperty("ip_anonym")
    @ApiModelProperty(value = "The anonymized IP-Address of the client.",
            example = "80.108.108")
    public String getIpAnonym() {
        return ipAnonym;
    }

    public void setIpAnonym(String ipAnonym) {
        this.ipAnonym = ipAnonym;
    }

    @JsonProperty("ndt_download_kbit")
    @ApiModelProperty(value = "Download speed in the NDT-test in kilobit per second.",
            example = "1443")
    public Long getNdtDownloadKbit() {
        return ndtDownloadKbit;
    }

    public void setNdtDownloadKbit(Long ndtDownloadKbit) {
        this.ndtDownloadKbit = ndtDownloadKbit;
    }

    @JsonProperty("ndt_upload_kbit")
    @ApiModelProperty(value = "Upload speed in the NDT-test in kilobit per second.",
            example = "2334")
    public Long getNdtUploadKbit() {
        return ndtUploadKbit;
    }

    public void setNdtUploadKbit(Long ndtUploadKbit) {
        this.ndtUploadKbit = ndtUploadKbit;
    }

    @JsonProperty("country_geoip")
    @ApiModelProperty(value = "Country according client IP address.",
            example = "HU")
    public String getCountryGeoip() {
        return countryGeoip;
    }

    public void setCountryGeoip(String countryGeoip) {
        this.countryGeoip = countryGeoip;
    }

    @JsonProperty("country_asn")
    @ApiModelProperty(value = "Country of AS of client IP.",
            example = "FI")
    public String getCountryAsn() {
        return countryAsn;
    }

    public void setCountryAsn(String countryAsn) {
        this.countryAsn = countryAsn;
    }

    @JsonProperty("bytes_download")
    @ApiModelProperty(value = "Total number of bytes downloaded during download test (excluding training-phase).",
            example = "13653343")
    public Long getBytesDownload() {
        return bytesDownload;
    }

    public void setBytesDownload(Long bytesDownload) {
        this.bytesDownload = bytesDownload;
    }

    @JsonProperty("bytes_upload")
    @ApiModelProperty(value = "Total number of bytes uploaded during upload test (excluding training-phase).",
            example = "3712431")
    public Long getBytesUpload() {
        return bytesUpload;
    }

    public void setBytesUpload(Long bytesUpload) {
        this.bytesUpload = bytesUpload;
    }

    @JsonProperty("test_if_bytes_download")
    @ApiModelProperty(value = "Data volume received on the interface during the test (including training phase).",
            example = "4991145")
    public Long getTestIfBytesDownload() {
        return testIfBytesDownload;
    }

    public void setTestIfBytesDownload(Long testIfBytesDownload) {
        this.testIfBytesDownload = testIfBytesDownload;
    }

    @JsonProperty("test_if_bytes_upload")
    @ApiModelProperty(value = "Data volume transmitted on the interface during the test (including training phase).",
            example = "1961967")
    public Long getTestIfBytesUpload() {
        return testIfBytesUpload;
    }

    public void setTestIfBytesUpload(Long testIfBytesUpload) {
        this.testIfBytesUpload = testIfBytesUpload;
    }

    @JsonProperty("testdl_if_bytes_download")
    @ApiModelProperty(value = "Data volume received on the interface during the download test.",
            example = "4580781")
    public Long getTestdlIfBytesDownload() {
        return testdlIfBytesDownload;
    }

    public void setTestdlIfBytesDownload(Long testdlIfBytesDownload) {
        this.testdlIfBytesDownload = testdlIfBytesDownload;
    }

    @JsonProperty("testdl_if_bytes_upload")
    @ApiModelProperty(value = "Data volume transmitted on the interface during the download test.",
            example = "107077")
    public Long getTestdlIfBytesUpload() {
        return testdlIfBytesUpload;
    }

    public void setTestdlIfBytesUpload(Long testdlIfBytesUpload) {
        this.testdlIfBytesUpload = testdlIfBytesUpload;
    }

    @JsonProperty("testul_if_bytes_download")
    @ApiModelProperty(value = "Data volume received on the interface during the upload test.",
            example = "57372")
    public Long getTestulIfBytesDownload() {
        return testulIfBytesDownload;
    }

    public void setTestulIfBytesDownload(Long testulIfBytesDownload) {
        this.testulIfBytesDownload = testulIfBytesDownload;
    }

    @JsonProperty("testul_if_bytes_upload")
    @ApiModelProperty(value = "Data volume transmitted on the interface during the upload test.",
            example = "1627790")
    public Long getTestulIfBytesUpload() {
        return testulIfBytesUpload;
    }

    public void setTestulIfBytesUpload(Long testulIfBytesUpload) {
        this.testulIfBytesUpload = testulIfBytesUpload;
    }

    @JsonProperty("duration_download_ms")
    @ApiModelProperty(value = "Duration of download test in ms.",
            example = "7000.13")
    public Double getDurationDownloadMs() {
        return durationDownloadMs;
    }

    public void setDurationDownloadMs(Double durationDownloadMs) {
        this.durationDownloadMs = durationDownloadMs;
    }

    @JsonProperty("duration_upload_ms")
    @ApiModelProperty(value = "Duration of upload test in ms.",
            example = "7000.11")
    public Double getDurationUploadMs() {
        return durationUploadMs;
    }

    public void setDurationUploadMs(Double durationUploadMs) {
        this.durationUploadMs = durationUploadMs;
    }

    @JsonProperty("time_dl_ms")
    @ApiModelProperty(value = "Relative start time of download in ms.",
            example = "3692.15")
    public Double getTimeDlMs() {
        return timeDlMs;
    }

    public void setTimeDlMs(Double timeDlMs) {
        this.timeDlMs = timeDlMs;
    }

    @JsonProperty("time_ul_ms")
    @ApiModelProperty(value = "Relative start time of upload in ms.",
            example = "13496.54")
    public Double getTimeUlMs() {
        return timeUlMs;
    }

    public void setTimeUlMs(Double timeUlMs) {
        this.timeUlMs = timeUlMs;
    }

    @JsonProperty("channel_number")
    @ApiModelProperty(value = "Channel number of the radio channel used during a measurement. E.g. the 18-bit Absolute RF Channel Number (EARFCN) " +
            "in case of 4G or the 16-bit UMTS Absolute RF Channel Number (UARFCN) in case of 3G.",
            example = "397")
    public Long getChannelNumber() {
        return channelNumber;
    }

    public void setChannelNumber(Long channelNumber) {
        this.channelNumber = channelNumber;
    }

    @JsonProperty("radio_band")
    @ApiModelProperty(value = "Radio band used when conducting the test.",
            example = "20")
    public Long getRadioBand() {
        return radioBand;
    }

    public void setRadioBand(Long radioBand) {
        this.radioBand = radioBand;
    }

    @JsonProperty("cell_area_code")
    @ApiModelProperty(value = "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            example = "10156")
    public Long getCellAreaCode() {
        return cellAreaCode;
    }

    public void setCellAreaCode(Long cellAreaCode) {
        this.cellAreaCode = cellAreaCode;
    }

    @JsonProperty("network_type")
    @ApiModelProperty(value = "Type of the network, e.g. MOBILE, LAN, WLAN.",
            example = "WLAN")
    public String getNetworkType() {
        return networkType;
    }

    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }

    @JsonProperty("signal_classification")
    @ApiModelProperty(value = "Classification for the signal strength in a traffic-light system.",
            example = "2")
    public Integer getSignalClassification() {
        return signalClassification;
    }

    public void setSignalClassification(Integer signalClassification) {
        this.signalClassification = signalClassification;
    }

    @JsonProperty("speed_curve")
    @ApiModelProperty(value = "Aggregated history of transferred data bytes during a test.")
    public OpenTestGraphDTO getSpeedCurve() {
        return speedCurve;
    }

    public void setSpeedCurve(OpenTestGraphDTO speedCurve) {
        this.speedCurve = speedCurve;
    }

    @JsonProperty("country_location")
    @ApiModelProperty(value = "Country of geo-location.",
            example = "FR")
    public String getCountryLocation() {
        return countryLocation;
    }

    public void setCountryLocation(String countryLocation) {
        this.countryLocation = countryLocation;
    }

    @JsonProperty("cell_location_id")
    @ApiModelProperty(value = "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS " +
            "or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            example = "28708964")
    public Long getCellLocationId() {
        return cellLocationId;
    }

    public void setCellLocationId(Long cellLocationId) {
        this.cellLocationId = cellLocationId;
    }

    @JsonProperty("speed_curve_threadwise")
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    @ApiModelProperty(value = "History of transferred data bytes per thread during a test. Returned only if verbose>0.")
    public Map<String, Map<String, List<SpeedGraphItemDTO.SpeedItemThreadwise>>> getSpeedCurveThreadwise() {
        return speedCurveThreadwise;
    }

    public void setSpeedCurveThreadwise(Map<String, Map<String, List<SpeedGraphItemDTO.SpeedItemThreadwise>>> speedCurveThreadwise) {
        this.speedCurveThreadwise = speedCurveThreadwise;
    }

    @JsonProperty("wifi_link_speed")
    @ApiModelProperty(value = "WLAN link speed according to the Android API.",
            example = "7562")
    public Long getWifiLinkSpeed() {
        return wifiLinkSpeed;
    }

    public void setWifiLinkSpeed(Long wifiLinkSpeed) {
        this.wifiLinkSpeed = wifiLinkSpeed;
    }

    @JsonProperty("settlement_type")
    @ApiModelProperty(value = "Settlement type (Austrian \"Dauersiedlungsraum\")\n " +
            "1 = Area which can not be used for settlement, classification based on CORINE \n " +
            "2 = Area which can be used for settlement, classification based on CORINE \n" +
            "3 = Settlement in 250m rasters with at least 6 inhabitants",
            example = "1")
    public Integer getSettlementType() {
        return settlementType;
    }

    public void setSettlementType(Integer settlementType) {
        this.settlementType = settlementType;
    }

    @JsonProperty("link_id")
    @ApiModelProperty(value = "Link ID (as defined by GIP) of the road/railway line.",
            example = "461004537")
    public Long getLinkId() {
        return linkId;
    }
    public void setLinkId(Long linki_id) {
        this.linkId = linki_id;
    }

    @JsonProperty("link_name")
    @ApiModelProperty(value = "Road/raiway line identifier.",
            example = "A14")
    public String getLinkName() {
        return linkName;
    }
    public void setLinkName(String linkName) {
        this.linkName = linkName;
    }

    @JsonProperty("link_distance")
    @ApiModelProperty(value = "Distance from road/railway line.",
            example = "0")
    public Integer getLinkDistance() {
        return linkDistance;
    }
    public void setLinkDistance(Integer linkDistance) {
        this.linkDistance = linkDistance;
    }

    @JsonProperty("edge_id")
    @ApiModelProperty(value = "Edge ID (as defined by GIP) of the road/railway line.",
            example = "15460011788")
    public void setEdgeId(Long edgeId) {
        this.edgeId = edgeId;
    }
    public Long getEdgeId() {
        return edgeId;
    }

    @JsonProperty("link_name1")
    @ApiModelProperty(value = "Long name of the street/railway line.",
            example = "Dr.-A.-Heinzle-Straße")
    public void setLinkName1(String linkName1) {
        this.linkName1 = linkName1;
    }
    public String getLinkName1() {
        return linkName1;
    }

    @JsonProperty("link_name2")
    @ApiModelProperty(value = "Additional name of the street/railway line.",
            example = "L190 - Vorarlberger Straße")
    public void setLinkName2(String linkName2) {
        this.linkName2 = linkName2;
    }
    public String getLinkName2() {
        return linkName2;
    }

    @JsonProperty("link_frc")
    @ApiModelProperty(value = "Functional road class (as defined by GIP).",
            example = "0")
    public Integer getLinkFrc() {
        return linkFrc;
    }
    public void setLinkFrc(Integer linkFrc) {
        this.linkFrc = linkFrc;
    }

    @JsonProperty("dtm_level")
    @ApiModelProperty(value = "Altitude derived from digital terrain model",
            example = "789")
    public Integer getDtm_level() {
        return dtm_level;
    }
    public void setDtm_level(Integer dtm_level) {
        this.dtm_level = dtm_level;
    }
}
