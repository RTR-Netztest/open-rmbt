package at.rtr.rmbt.statisticServer.opendata;

import org.apache.commons.io.FileUtils;
import org.json.JSONArray;
import org.json.JSONObject;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.stubbing.Answer;

import java.io.File;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.concurrent.atomic.AtomicInteger;

import static org.junit.Assert.*;

/**
 * Created by Extern on 17.03.2017.
 */
public class OpenTestSearchResourceTest {
    private ResultSet rs;

    private OpenTestSearchResource or = new OpenTestSearchResource();

    @Before
    public void setUp() throws Exception {
        String path = System.getProperty("user.dir");
        path += File.separator + File.separator + "test" +File.separator+ "resources" + File.separator;

        //load mock json
        String file = FileUtils.readFileToString(new File(path + "opentests.json"),"UTF-8");

        final JSONObject json = new JSONObject(file);

        this.rs = Mockito.mock(ResultSet.class);
        Mockito.when(rs.next()).thenReturn(true,true,true,true,true,true,true,false);
        Mockito.when(rs.getObject(Mockito.anyString())).thenAnswer(new Answer<Object>() {
            private HashMap<String, AtomicInteger> i = new HashMap<>();

            @Override
            public Object answer(InvocationOnMock invocation) throws Throwable {
                String arg = invocation.getArgument(0).toString();
                if (!i.containsKey(arg)) {
                    i.put(arg, new AtomicInteger());
                }

                Object ret = json.getJSONArray("results").getJSONObject(i.get(arg).getAndIncrement()).get(arg);
                if (ret.equals(JSONObject.NULL)) {
                    return null;
                }
                return ret;
            }
        });

    }

    @Test
    public void mapToJson() throws Exception {
        JSONArray arr = new JSONArray();
        //long count = this.or.mapToJson(this.rs,new LinkedHashSet<String>(),arr);

        //assertEquals(true,true);
    }

    @Test
    public void mapToCsv() throws Exception {
        StringBuffer buf = new StringBuffer();
        //this.or.mapToCsv(this.rs,new LinkedHashSet<String>(), buf);

        //assertEquals(true,true);
    }

}